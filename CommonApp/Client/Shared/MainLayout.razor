@using Blazored.Toast.Configuration
@inherits LayoutComponentBase
@inject NavigationManager navigationManager
@inject IdentityAuthenticationStateProvider authStateProvider

<BlazoredToasts Position="ToastPosition.BottomRight"
                Timeout="4"
                IconType="IconType.FontAwesome"
                SuccessClass="success-toast-override"
                SuccessIcon="fa fa-thumbs-up"
                ErrorIcon="fa fa-bug" />

<RadzenDialog />
<RadzenNotification />
<RadzenContextMenu />
<RadzenTooltip />

<div class="page">
    <AuthorizeView>
        <Authorized>
            @*Show the menu and the rest of the body*@
            <div class="sidebar">
                <NavMenu />
            </div>

            <div class="main">
                <div class="top-row px-4">
                    <button type="button" class="btn btn-link ml-md-auto" @onclick="@LogoutClick">Logout</button>
                </div>

                <div class="content px-4">
                    @Body
                </div>
            </div>

        </Authorized>
        <NotAuthorized>
            @*Just render the body so that RedirectToLogin works*@
            @Body
        </NotAuthorized>
    </AuthorizeView>
</div>


@code {

    async Task LogoutClick()
    {
        await authStateProvider.Logout();
        navigationManager.NavigateTo("/login");
    }
}