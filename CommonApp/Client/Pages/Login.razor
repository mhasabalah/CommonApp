@page "/login"

@layout LoginLayout
@inject NavigationManager navigationManager
@inject IdentityAuthenticationStateProvider authStateProvider

<PageTitle>Login</PageTitle>

@*<h1 class="h2 font-weight-normal login-title">
    Blazor with Identity Sample
</h1>

<EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="loginParameters">
    <DataAnnotationsValidator />
    <h4 class="font-weight-normal text-center">Login</h4>

    <label for="inputUsername" class="sr-only">User Name</label>
    <InputText id="inputUsername" class="form-control" @bind-Value="loginParameters.UserName" autofocus placeholder="Username" />
    <ValidationMessage For="@(() => loginParameters.UserName)" />

    <label for="inputPassword" class="sr-only">Password</label>
    <InputText type="password" id="inputPassword" class="form-control" placeholder="Password" @bind-Value="loginParameters.Password" />
    <ValidationMessage For="@(() => loginParameters.Password)" />

    <div class="form-check m-3">
        <InputCheckbox id="inputRememberMe" class="form-check-input" @bind-Value="@loginParameters.RememberMe" />
        <label class="form-check-label" for="inputRememberMe">Remember Me</label>
    </div>

    <button class="btn btn-lg btn-primary btn-block" type="submit">Sign in</button>

    <label class="text-danger">@error</label>

    <NavLink href="register">
        <h6 class="font-weight-normal text-center">Create account</h6>
    </NavLink>
</EditForm>*@

<div class="container-fluid">
    <div class="row">
        <div class="col-sm-4 login-section-wrapper">
            <div class="brand-wrapper mb-3">
                <div class="d-flex flex-row logo">
                    <div class="logocs mr-2">
                        <i class="fab fa-airbnb"></i>
                    </div>
                    <p>CaseFair</p>
                </div>
            </div>
            <div class="login-wrapper my-auto">
                <h1 class="login-title">Log in</h1>
                <EditForm OnValidSubmit="OnSubmit" Model="loginParameters">
                    <DataAnnotationsValidator />

                    <div class="form-group">
                        <label for="inputUsername">User Name</label>
                        <InputText id="inputUsername" class="form-control inputLogin" @bind-Value="loginParameters.UserName" autofocus placeholder="Username"/>
                        <ValidationMessage For="@(() => loginParameters.UserName)"/>
                    </div>
                    <div class="form-group mb-4">
                        <label for="inputPassword">Password</label>
                        <InputText type="password" id="inputPassword" class="form-control inputLogin" placeholder="Password" @bind-Value="loginParameters.Password"/>
                        <ValidationMessage For="@(() => loginParameters.Password)"/>
                    </div>
                    <div class="form-check m-3">
                        <InputCheckbox id="inputRememberMe" class="form-check-input" @bind-Value="@loginParameters.RememberMe"/>
                        <label class="form-check-label" for="inputRememberMe">Remember Me</label>
                    </div>
                    <button id="login" class="btn btn-block login-btn" type="submit">Sign in</button>
                    <label class="text-danger">@error</label>
                    <NavLink href="register">
                        <h6 class="font-weight-normal text-center">Create account</h6>
                    </NavLink>

                </EditForm>

                
            </div>
        </div>
        <div class="col-sm-8 px-0 d-none d-sm-block" style="position: relative">
            <ul class="backgroundLogin">
                <li></li>
                <li></li>
                <li></li>
                <li></li>
            </ul>
            <div class="center">
                <div class="d-flex flex-row">
                    <div class="logo ">
                        <i class="fab fa-airbnb"></i>
                    </div>
                    <p>CaseFair</p>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    LoginParameters loginParameters { get; set; } = new LoginParameters();
    string error { get; set; }

    async Task OnSubmit()
    {
        error = null;
        try
        {
            await authStateProvider.Login(loginParameters);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}